var searchIndex = {};
searchIndex['coyoneda'] = {"items":[[0,"","coyoneda","# Endofunctor composition via the Co-Yoneda Lemma",null,null],[3,"Coyoneda","","",null,null],[8,"Functor","","",null,null],[16,"Output","coyoneda::Functor","",null,null],[10,"fmap","coyoneda","",0,{"inputs":[{"name":"functor"},{"name":"f"}],"output":{"name":"output"}}],[11,"map","","",1,{"inputs":[{"name":"coyoneda"},{"name":"f"}],"output":{"name":"coyoneda"}}],[11,"unwrap","","",1,null],[11,"from","","",1,{"inputs":[{"name":"coyoneda"},{"name":"t"}],"output":{"name":"coyoneda"}}],[6,"Output","","",null,null],[11,"fmap","alloc::boxed","",2,{"inputs":[{"name":"box"},{"name":"f"}],"output":{"name":"output"}}],[6,"Output","coyoneda","",null,null],[11,"fmap","core::option","",3,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"output"}}],[6,"Output","coyoneda","",null,null],[11,"fmap","core::result","",4,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"output"}}]],"paths":[[8,"Functor"],[3,"Coyoneda"],[3,"Box"],[4,"Option"],[4,"Result"]]};
searchIndex['morphism'] = {"items":[[0,"","morphism","This crate provides a structure for suspended closure composition.\nComposition is delayed and executed in a loop when a `Morphism` is\napplied to an argument.",null,null],[3,"Morphism","","A suspended chain of closures that behave as a function from type\n`A` to type `B`.",null,null],[11,"new","","Create the identity chain.",0,{"inputs":[{"name":"morphism"}],"output":{"name":"morphism"}}],[11,"unsafe_push_front","","",0,null],[11,"head","","Attach a closure to the front of the closure chain. This corresponds to\nclosure composition at the domain (pre-composition).",0,{"inputs":[{"name":"morphism"},{"name":"f"}],"output":{"name":"morphism"}}],[11,"push_front","","Mutate a given `Morphism<B, C>` by pushing a closure of type\n`Fn(B) -> B` onto the front of the chain.",0,null],[11,"unsafe_push_back","","",0,null],[11,"tail","","Attach a closure to the back of the closure chain. This corresponds to\nclosure composition at the codomain (post-composition).",0,{"inputs":[{"name":"morphism"},{"name":"f"}],"output":{"name":"morphism"}}],[11,"push_back","","Mutate a given `Morphism<A, B>` by pushing a closure of type\n`Fn(B) -> B` onto the back of the chain.",0,null],[11,"then","","Compose one `Morphism` with another.",0,{"inputs":[{"name":"morphism"},{"name":"morphism"}],"output":{"name":"morphism"}}],[6,"Output","","",null,null],[11,"call_once","","",0,null],[11,"call_mut","","",0,null],[11,"call","","",0,null]],"paths":[[3,"Morphism"]]};
initSearch(searchIndex);
